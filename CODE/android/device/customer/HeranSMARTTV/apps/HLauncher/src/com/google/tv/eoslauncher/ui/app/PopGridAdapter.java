package com.google.tv.eoslauncher.ui.app;import java.util.List;import com.google.tv.eoslauncher.HomeApplication;import com.google.tv.eoslauncher.R;import com.google.tv.eoslauncher.model.AppInfoBean;import com.nostra13.universalimageloader.core.DisplayImageOptions;import com.nostra13.universalimageloader.core.assist.ImageScaleType;import android.content.Context;import android.graphics.Bitmap;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.BaseAdapter;import android.widget.ImageView;import android.widget.TextView;public class PopGridAdapter extends BaseAdapter {    private Context mContext;    private List<AppInfoBean> mList;    public PopGridAdapter(Context context, List<AppInfoBean> list) {        mContext = context;        mList = list;    }        private int[] icons = {            R.drawable.appfeed_icon_facebook, R.drawable.ic_logo_youtube, R.drawable.flickr_logo,            R.drawable.pasacas_icon, R.drawable.history_ic_launcher,    };    @Override    public int getCount() {        return mList.size();    }    @Override    public Object getItem(int position) {        return mList.get(position);    }    @Override    public long getItemId(int position) {        return position;    }    @Override    public View getView(int position, View convertView, ViewGroup parent) {        AppInfoBean appInfo = mList.get(position);        AppItem appItem;        if (convertView == null) {            View v = LayoutInflater.from(mContext).inflate(R.layout.my_app_item, null);            appItem = new AppItem();            appItem.mAppIcon = (ImageView) v.findViewById(R.id.my_appicon);            appItem.mAppTitle = (TextView) v.findViewById(R.id.my_apptitle);            v.setTag(appItem);            convertView = v;        } else {            appItem = (AppItem) convertView.getTag();        }        // Get the application icon and name        DisplayImageOptions options = new DisplayImageOptions.Builder().cacheInMemory(false).cacheOnDisk(true).considerExifParams(true)                .bitmapConfig(Bitmap.Config.RGB_565).showImageOnLoading(icons[position]).imageScaleType(ImageScaleType.EXACTLY_STRETCHED).build();        HomeApplication.getInstance().displayImage(appInfo.getPictureUrl(), options, appItem.mAppIcon);        appItem.mAppTitle.setText(appInfo.getTitle());        return convertView;    }    // the listview item holder    private class AppItem {        ImageView mAppIcon;        TextView mAppTitle;    }}